# Kubernetes deployment for vLLM Router
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-router-deployment
  namespace: default
  labels:
    app: vllm-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-router
  template:
    metadata:
      labels:
        app: vllm-router
    spec:
      containers:
      - name: vllm-router
        # We'll build and push a custom image, for now use a placeholder
        image: vllm-router:latest
        imagePullPolicy: Never  # Use local image
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 29000
          name: metrics
        env:
        - name: RUST_LOG
          value: "info"
        command:
        - /usr/local/bin/vllm-router
        args:
        - --host
        - "0.0.0.0"
        - --port
        - "8080"
        - --worker-urls
        - "http://10.100.31.179:8000"  # vLLM service internal IP
        - --prometheus-host
        - "0.0.0.0"
        - --prometheus-port
        - "29000"
        - --log-level
        - "info"
        resources:
          requests:
            cpu: "0.5"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
      # Deploy to a different node than vLLM if possible
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["vllm"]
              topologyKey: kubernetes.io/hostname

---
# Service to expose vLLM Router
apiVersion: v1
kind: Service
metadata:
  name: vllm-router-service
  labels:
    app: vllm-router
spec:
  selector:
    app: vllm-router
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 30081
  - name: metrics
    protocol: TCP
    port: 29000
    targetPort: 29000
    nodePort: 30082
  type: NodePort

---
# Alternative deployment using Python launcher
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-router-python-deployment
  namespace: default
  labels:
    app: vllm-router-python
spec:
  replicas: 0  # Disabled by default, set to 1 to enable
  selector:
    matchLabels:
      app: vllm-router-python
  template:
    metadata:
      labels:
        app: vllm-router-python
    spec:
      containers:
      - name: vllm-router-python
        image: python:3.11-slim
        command: ["/bin/bash", "-c"]
        args:
        - |
          apt-get update && apt-get install -y curl git build-essential && \
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
          . $HOME/.cargo/env && \
          cd /workspace && \
          pip install setuptools-rust wheel build requests && \
          python -m build && \
          pip install dist/*.whl && \
          python -m vllm_router.launch_router \
            --worker-urls http://10.100.31.179:8000 \
            --host 0.0.0.0 \
            --port 8080 \
            --prometheus-host 0.0.0.0 \
            --prometheus-port 29000
        ports:
        - containerPort: 8080
        - containerPort: 29000
        volumeMounts:
        - name: vllm-router-source
          mountPath: /workspace
        resources:
          requests:
            cpu: "0.5"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "6Gi"
      volumes:
      - name: vllm-router-source
        emptyDir: {}
      # Deploy to a different node than vLLM if possible
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["vllm"]
              topologyKey: kubernetes.io/hostname
